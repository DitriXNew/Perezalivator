#Использовать sql
#Использовать asserts
#Использовать messenger 
#Использовать json

Перем Соединение, BotID, ServiceID, Мессенджер, СообщениеОтАдмина Экспорт;

Процедура ПрочитатьСообщения()
	
	БазаДанныхСуществует();
	ПоследнийНомер = ПоследнийНомер();
	
	
	ПараметрыЗапроса = Новый Структура;
	
	Если НЕ ПоследнийНомер = Неопределено Тогда
		ПараметрыЗапроса.Вставить("offset", Формат(ПоследнийНомер+1, "ЧГ="));
	КонецЕсли;
	
	
	
	ПулСообщений = ВызватьМетодTelegramAPI("getUpdates",ПараметрыЗапроса);
	
	Если ПулСообщений.КодСостояния <> 200 Тогда
		ОтправитьСообщение("Ошибка при опросе новый сообщений:" + Символы.ПС + ПулСообщений.ПолучитьТелоКакСтроку());
	КонецЕсли;
	
	Парсер = Новый ПарсерJSON();
	Ответ = Парсер.ПрочитатьJSON(ПулСообщений.ПолучитьТелоКакСтроку(),,, Истина);
	
	Ожидаем.Что(Ответ.ok).ЭтоИстина();
	
	Для Каждого Сообщение Из Ответ.result Цикл
		
		Если Сообщение.Свойство("message") Тогда
			СообщениеОтАдмина = Сообщение.message.from.id = ServiceID; 
			
			Если ПользовательУжеОдобрен(Сообщение.message.from) Тогда
				Сообщить("Добавлен")
			Иначе
				ПараметрыЗапроса = Новый Структура;
				ПараметрыЗапроса.Вставить("chat_id",ServiceID);
				ПараметрыЗапроса.Вставить("text","Хочет добавиться новый пользователь " + Сообщение.message.from.first_name + " с ID " + Сообщение.message.from.id );
				//https://apps.timwhitlock.info/emoji/tables/unicode
				ПараметрыЗапроса.Вставить("reply_markup","{""inline_keyboard"":[[{""text"":""✔ Добавить"",""callback_data"":""Y"+ Сообщение.message.from.id +"""},{""text"":""✖ Отказать"",""callback_data"":""2""},{""text"":""❌ Игнорировать"",""callback_data"":""3""}]]}");
				ПулСообщений = ВызватьМетодTelegramAPI("sendMessage",ПараметрыЗапроса);
			КонецЕсли;
		ИначеЕсли Сообщение.Свойство("callback_query") Тогда
			СообщениеОтАдмина = Сообщение.callback_query.from.id = ServiceID;
		КонецЕсли;
		ОбновитьПоследнийНомер(Сообщение.update_id);
	КонецЦикла;
	
	Сообщить(ПулСообщений.ПолучитьТелоКакСтроку());
КонецПроцедуры

Функция ОбновитьПоследнийНомер(IDСообщения)
	ЗапросВставка = Новый Запрос();
	ЗапросВставка.УстановитьСоединение(Соединение);
	
	ЗапросВставка.Текст = "delete from lastID ";
	ЗапросВставка.ВыполнитьКоманду();
	
	ЗапросВставка.Текст = "insert into lastID (id) values(@id)";
	ЗапросВставка.УстановитьПараметр("id", IDСообщения);
	ЗапросВставка.ВыполнитьКоманду();
КонецФункции

Функция ПоследнийНомер()
	ЗапросВставка = Новый Запрос();
	ЗапросВставка.УстановитьСоединение(Соединение);
	ЗапросВставка.Текст = "select * from lastID";
	ТЗ = ЗапросВставка.Выполнить().Выгрузить();
	
	Если ТЗ.Количество() Тогда
		Возврат ТЗ[0].id;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция ПользовательУжеОдобрен(ПараметрыОтправителя)
	ЗапросВставка = Новый Запрос();
	ЗапросВставка.УстановитьСоединение(Соединение);
	ЗапросВставка.Текст = "select * from usersID where id = @id";
	ЗапросВставка.УстановитьПараметр("id", ПараметрыОтправителя.id);
	ТЗ = ЗапросВставка.Выполнить().Выгрузить();
	
	Возврат ТЗ.Количество() > 0;
КонецФункции

Функция БазаДанныхСуществует()
	ФайлБД = Новый Файл("sqlite\telegram.sqlite");
	ПолноеИмяБД = ФайлБД.ПолноеИмя;
	
	Соединение = Новый Соединение();
	Соединение.ТипСУБД = Соединение.ТипыСУБД.sqlite;
	Соединение.ИмяБазы = ПолноеИмяБД;
	
	Если (ФайлБД.Существует()) Тогда
		Соединение.Открыть();
		Возврат Истина;
	КонецЕсли;
	
	Соединение.Открыть();
	
	ЗапросВставка = Новый Запрос();
	ЗапросВставка.УстановитьСоединение(Соединение);
	ЗапросВставка.Текст = "Create table usersID (id integer, name text)";
	ЗапросВставка.ВыполнитьКоманду();
	
	ЗапросВставка = Новый Запрос();
	ЗапросВставка.УстановитьСоединение(Соединение);
	ЗапросВставка.Текст = "Create table lastID (id integer)";
	ЗапросВставка.ВыполнитьКоманду();
	
	Ожидаем.Что(ФайлБД.Существует()).ЭтоИстина();
	
	Освободитьобъект(ФайлБД);
	
	ОтправитьСообщение("Была создана новая база данных пользователей Telegram"); 
	
	Возврат Истина;
КонецФункции

Процедура ОтправитьСообщение(ТекстСообщения, IDПользователя = Неопределено) Экспорт
	Если IDПользователя = Неопределено Тогда
		IDПользователя = Новый Массив;	
		IDПользователя.Добавить(ServiceID);
	КонецЕсли;
	Для Каждого Пользователь Из IDПользователя Цикл
		Мессенджер.ОтправитьСообщение("telegram", Пользователь, "```" + Символы.ПС + ТекстСообщения + Символы.ПС + "```", ,"md");
	КонецЦикла;
КонецПроцедуры

Функция ВызватьМетодTelegramAPI(ИмяМетода, Параметры)
	
	СтрокаПараметров = "";
	Для Каждого Параметр Из Параметры Цикл
		
		Шаблон = "%1=%2&";
		СтрокаПараметров = СтрокаПараметров + СтрШаблон(Шаблон, Параметр.Ключ, Параметр.Значение);
		
	КонецЦикла;	
	
	ИмяСервера = "https://api.telegram.org";
	
	URL = "/bot"
	+ BotID
	+ "/" + ИмяМетода
	+ "?" + СтрокаПараметров;
	
	HTTPЗапрос = Новый HTTPЗапрос(URL);
	
	HTTP = Новый HTTPСоединение(ИмяСервера);
	ОтветHTTP = HTTP.ОтправитьДляОбработки(HTTPЗапрос);
	
	Возврат ОтветHTTP;
	
КонецФункции


BotID = "628738246:AAE6jj2iA0dOiNavmBtC7aOK9y6CB5VjDxk"; //ID бота, который будет принимать команды
ServiceID = "205872483"; //ID пользователя, который будет получать все ошибки, включая ошибки регистрации
Соединение = Неопределено;
СообщениеОтАдмина = Ложь;

Мессенджер = Новый Мессенджер();
Мессенджер.ИнициализироватьТранспорт("telegram", Новый Структура("Логин", BotID));

ПрочитатьСообщения();

Если НЕ Соединение = Неопределено Тогда
	Соединение.Закрыть();
КонецЕсли;